new_task_int:	
	lb $t0, CREATED_TASK_COUNTER
	bge $t0, 10, done
	bne $t0, 1, non_empty_list
	empty_list:
		lw $t0, AVAILABLE
		sw $t0, READY # ready = available
		
		lw $t0, READY
		sw $t0, LAST_READY # LAST_READY = READY
		
		lw $t0, LAST_READY
		sw $zero, NEXT_PCB($t0) # LAST_READY -> next = null
		
		lw $t0, AVAILABLE
		addi $t0, $t0, PCB_SIZE
		sw $t0, AVAILABLE # AVAILABLE += PCB_SIZE
		
		b increment_counter
	non_empty_list:
		lw $t0, LAST_READY
		lw $t1, AVAILABLE
		sw $t1, NEXT_PCB($t0)
		
		lw $t0, LAST_READY
		lw $t1, NEXT_PCB($t0) # t1 = LAST_READY -> next
		sw $t1, LAST_READY # LAST_READY = LAST_READY -> next
		
		lw $t0, LAST_READY
		sw $zero, NEXT_PCB($t0) # LAST_READY -> next = null
		
		lw $t0, AVAILABLE
		addi $t0, $t0, PCB_SIZE
		sw $t0, AVAILABLE # AVAILABLE += PCB_SIZE
	increment_counter:
		lb $t0, CREATED_TASK_COUNTER
		addi $t0, $t0, 1
		sb $t0, CREATED_TASK_COUNTER # CREATED_TASK_COUNTER += 1
	store_pid_epc: # also store TICKS_TO_SWITCH, TICKS_TO_WAIT and PRIORITY
		lw $t0, LAST_READY
		lb $t1, CREATED_TASK_COUNTER
		#addi $t1, $t1, -1
		sb $t1, PROCESS_ID($t0) # stores the new process id on the correspondent PCB
		sw $a1, epc($t0) # new task's starting address(epc)
		li $t1, 3
		sw $t1, TICKS_TO_SWITCH($t0) # TICKS_TO_SWITCH = 3
		sw $zero, TICKS_TO_WAIT($t0) # TICKS_TO_WAIT = 0
		sw $a2, PRIORITY($t0) # priority = a2
	done:
		mfc0 $t0, $14
		addi $t0, $t0, 4
		mtc0 $t0, $14
		la $a0, new_task_str
		print_string
		b int_end